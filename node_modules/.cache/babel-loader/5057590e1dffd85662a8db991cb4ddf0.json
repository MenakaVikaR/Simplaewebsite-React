{"ast":null,"code":"var _jsxFileName = \"C:\\\\react\\\\htmltoreact\\\\first-project\\\\src\\\\pages\\\\Mailchimp.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport validator from 'validator';\nimport { Form, Input, Button, Icon } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewsletterForm = _ref => {\n  let {\n    handleSendEmail,\n    handleOnChangeEmail,\n    email\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Form, {\n    layout: \"inline\",\n    className: \"newsletter-form\",\n    method: \"POST\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        prefix: /*#__PURE__*/_jsxDEV(Icon, {\n          type: \"red-envelope\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 24\n        }, this),\n        placeholder: \"Email\",\n        value: email,\n        onChange: _ref2 => {\n          let {\n            target\n          } = _ref2;\n          return handleOnChangeEmail(target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => handleSendEmail(email),\n        disabled: !validator.isEmail(email),\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = NewsletterForm;\nNewsletterForm.propTypes = {\n  email: PropTypes.string.isRequired,\n  handleSendEmail: PropTypes.func.isRequired,\n  handleOnChangeEmail: PropTypes.func.isRequired\n};\nexport default NewsletterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewsletterForm\");","map":{"version":3,"sources":["C:/react/htmltoreact/first-project/src/pages/Mailchimp.js"],"names":["React","PropTypes","validator","Form","Input","Button","Icon","NewsletterForm","handleSendEmail","handleOnChangeEmail","email","target","value","isEmail","propTypes","string","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,IAA9B,QAA0C,MAA1C;;;AAEA,MAAMC,cAAc,GAAG,QAAqD;AAAA,MAApD;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA,mBAAnB;AAAwCC,IAAAA;AAAxC,GAAoD;AAC1E,sBACE,QAAC,IAAD;AAAM,IAAA,MAAM,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,iBAAhC;AAAkD,IAAA,MAAM,EAAC,MAAzD;AAAA,4BACE,QAAC,IAAD,CAAM,IAAN;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,MAAM,eAAE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,gBAAf;AAA6C,QAAA,WAAW,EAAC,OAAzD;AAAiE,QAAA,KAAK,EAAEA,KAAxE;AACE,QAAA,QAAQ,EAAE;AAAA,cAAC;AAACC,YAAAA;AAAD,WAAD;AAAA,iBAAcF,mBAAmB,CAACE,MAAM,CAACC,KAAR,CAAjC;AAAA;AADZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,IAAD,CAAM,IAAN;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAMJ,eAAe,CAACE,KAAD,CAAtC;AAA+C,QAAA,QAAQ,EAAE,CAACR,SAAS,CAACW,OAAV,CAAkBH,KAAlB,CAA1D;AACE,QAAA,IAAI,EAAC,SADP;AACiB,QAAA,QAAQ,EAAC,QAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAfD;;KAAMH,c;AAiBNA,cAAc,CAACO,SAAf,GAA2B;AACzBJ,EAAAA,KAAK,EAAET,SAAS,CAACc,MAAV,CAAiBC,UADC;AAEzBR,EAAAA,eAAe,EAAEP,SAAS,CAACgB,IAAV,CAAeD,UAFP;AAGzBP,EAAAA,mBAAmB,EAAER,SAAS,CAACgB,IAAV,CAAeD;AAHX,CAA3B;AAMA,eAAeT,cAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport validator from 'validator';\r\nimport { Form, Input, Button, Icon } from 'antd';\r\n\r\nconst NewsletterForm = ({ handleSendEmail, handleOnChangeEmail, email }) => {\r\n  return (\r\n    <Form layout='inline' className=\"newsletter-form\" method=\"POST\">\r\n      <Form.Item>\r\n        <Input prefix={<Icon type=\"red-envelope\" />} placeholder=\"Email\" value={email}\r\n          onChange={({target}) => handleOnChangeEmail(target.value)} />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button onClick={() => handleSendEmail(email)} disabled={!validator.isEmail(email)}\r\n          type=\"primary\" htmlType=\"submit\">\r\n          Send\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  )\r\n}\r\n\r\nNewsletterForm.propTypes = {\r\n  email: PropTypes.string.isRequired,\r\n  handleSendEmail: PropTypes.func.isRequired,\r\n  handleOnChangeEmail: PropTypes.func.isRequired\r\n}\r\n\r\nexport default NewsletterForm;"]},"metadata":{},"sourceType":"module"}